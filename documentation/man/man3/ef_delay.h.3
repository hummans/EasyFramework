.TH "include/ef/delay.h" 3 "Fri May 15 2020" "Version 0.4.5" "Easy Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ef/delay.h
.SH SYNOPSIS
.br
.PP
\fC#include <ef/type\&.h>\fP
.br
\fC#include <sys/sysinfo\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "size_t \fBtime_ms\fP (void)"
.br
.ti -1c
.RI "size_t \fBtime_us\fP (void)"
.br
.ti -1c
.RI "size_t \fBtime_cpu_ms\fP (void)"
.br
.ti -1c
.RI "size_t \fBtime_cpu_us\fP (void)"
.br
.ti -1c
.RI "double \fBtime_dbls\fP (void)"
.br
.ti -1c
.RI "\fBerr_t\fP \fBdelay_ms\fP (uint64_t ms)"
.br
.ti -1c
.RI "\fBerr_t\fP \fBdelay_us\fP (uint64_t us)"
.br
.ti -1c
.RI "\fBerr_t\fP \fBdelay_dbls\fP (double s)"
.br
.ti -1c
.RI "void \fBdelay_hard\fP (uint64_t us)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBerr_t\fP delay_dbls (double s)"
sleep seconds as double 
.SS "void delay_hard (uint64_t us)"
wait microsecons without sleep this function can be use 100% of cpu if the time is long 
.SS "\fBerr_t\fP delay_ms (uint64_t ms)"
sleep milliseconds 
.SS "\fBerr_t\fP delay_us (uint64_t us)"
sleep microseconds 
.SS "size_t time_cpu_ms (void)"
get time in milliseconds only for cpu 
.SS "size_t time_cpu_us (void)"
get time in microseconds only for cpu 
.SS "double time_dbls (void)"
get time in seconds from starting os 
.SS "size_t time_ms (void)"
get time in milliseconds from starting os 
.SS "size_t time_us (void)"
get time in microseconds from starting os 
.SH "Author"
.PP 
Generated automatically by Doxygen for Easy Framework from the source code\&.
